@using PBX.Models
@model PBX.Models.Ogloszenie

@{
    ViewBag.Title = "Edytuj Ogłoszenie";
}

<h2>Edytuj Ogłoszenie</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.aktywne)
    @Html.HiddenFor(model => model.dodano)


    <div class="form-group">
        @Html.LabelFor(model => model.nazwa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nazwa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nazwa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Kategoria, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.kategoria_id, new { htmlAttributes = new { @class = "form-control", @type = "text", @list = "category-list", @name = "category", @value="" } })
                @Html.ValidationMessageFor(model => model.Kategoria.nazwa, "", new { @class = "text-danger" })*@
            <input class="form-control" type="text" list="category-list" name="category" value="@ViewBag.currKat" />
            <datalist id="category-list" placeholder="Wybierz kategorię...">
                @foreach (Kategoria kat in ViewBag.kategorie as List<Kategoria>)
                {
                    <option value="@kat.nazwa.Trim()"></option>
                }
            </datalist>
            @*<select class="form-control" name="category" id="category-list" placeholder="Wybierz kategorię..." style="min-height:34px;">
                    @foreach (Kategoria kat in ViewBag.kategorie as List<Kategoria>)
                    {
                        <option value="@kat.id">@kat.nazwa.Trim()</option>
                    }
                </select>*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.opis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.opis, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.opis, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.typ, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" name="type" id="type-list" placeholder="Wybierz kategorię...">
                @foreach (string typ in ViewBag.typy as string[])
                {
                    if ((ViewBag.currTyp as string).Equals(typ))
                    {
                        <option value="@typ" selected>@typ</option>
                    }
                    else
                    {
                        <option value="@typ">@typ</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cena, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cena, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cena, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.negocjacja, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.negocjacja)
                @Html.ValidationMessageFor(model => model.negocjacja, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pokaz_tel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.pokaz_tel)
                @Html.ValidationMessageFor(model => model.pokaz_tel, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pokaz_email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.pokaz_email)
                @Html.ValidationMessageFor(model => model.pokaz_email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz zmiany" class="btn btn-outline-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Powrót", "Index", "Home")
</div>
