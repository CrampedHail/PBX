@using PBX.Models
@model PBX.Models.Ogloszenie

@{
    ViewBag.Title = "Edytuj Ogłoszenie";
}

<h2>Edytuj Ogłoszenie</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.aktywne)
    @Html.HiddenFor(model => model.dodano)


    <div class="form-group d-flex justify-content-center">
            @Html.EditorFor(model => model.nazwa, new { htmlAttributes = new { @class = "form-control", @placeholder="Tytuł" } })
            @Html.ValidationMessageFor(model => model.nazwa, "", new { @class = "text-danger" })
    </div>

    <div class="form-group d-flex justify-content-center">
            <input class="form-control" type="text" list="category-list" name="category" value="@ViewBag.currKat" />
            <datalist id="category-list" placeholder="Wybierz kategorię...">
                @foreach (Kategoria kat in ViewBag.kategorie as List<Kategoria>)
                {
                    <option value="@kat.nazwa.Trim()"></option>
                }
            </datalist>
    </div>

    <div class="form-group d-flex justify-content-center">
            @Html.EditorFor(model => model.opis, new { htmlAttributes = new { @class = "form-control", @placeholder = "Opis" } })
            @Html.ValidationMessageFor(model => model.opis, "", new { @class = "text-danger" })
    </div>

    <div class="form-group d-flex justify-content-center">
            <select class="form-control" name="type" id="type-list" placeholder="Wybierz kategorię...">
                @foreach (string typ in ViewBag.typy as string[])
                {
                    if ((ViewBag.currTyp as string).Equals(typ))
                    {
                        <option value="@typ" selected>@typ</option>
                    }
                    else
                    {
                        <option value="@typ">@typ</option>
                    }
                }
            </select>
    </div>

    <div class="form-group d-flex justify-content-center">
            @Html.EditorFor(model => model.cena, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cena" } })
            @Html.ValidationMessageFor(model => model.cena, "", new { @class = "text-danger" })
    </div>

    <div class="form-group d-flex justify-content-center">
        @Html.EditorFor(model => model.negocjacja)
        @Html.LabelFor(model => model.negocjacja, htmlAttributes: new { @class = "pl-3" })
        @Html.ValidationMessageFor(model => model.negocjacja, "", new { @class = "text-danger" })
    </div>

    <div class="form-group d-flex justify-content-center">
        @Html.EditorFor(model => model.pokaz_tel)
        @Html.LabelFor(model => model.pokaz_tel, htmlAttributes: new { @class = "pl-3" })
        @Html.ValidationMessageFor(model => model.pokaz_tel, "", new { @class = "text-danger" })
    </div>

    <div class="form-group d-flex justify-content-center">
        @Html.EditorFor(model => model.pokaz_email)
        @Html.LabelFor(model => model.pokaz_email, htmlAttributes: new { @class = "pl-3" })
        @Html.ValidationMessageFor(model => model.pokaz_email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group d-flex justify-content-center">
            <input type="submit" value="Zapisz zmiany" class="btn btn-danger" />
    </div>
</div>
}

<div>
    @Html.ActionLink("Powrót", "Index", "Home")
</div>
