@using PBX.Models

@model PBX.Models.Ogloszenie

@{
    ViewBag.Title = "Dodaj Ogłoszenie";
}
<h2>Dodaj Ogłoszenie</h2>
@using (Html.BeginForm("Create", "Advertisement", new { u = Model }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal" style="display:flex;flex-wrap:wrap;justify-content:center;">

        <div style="width: 40%; min-width: 280px;">
            <div class="form-group d-flex flex-column align-items-center justify-content-center" style="flex-direction:column;align-items:center">
                <img class="picture" />
                @Html.ValidationMessageFor(model => model.zdjecie, "", new { @class = "text-danger" })
                <input class="picture-input" type="file" accept=".jpg,.jpeg,.png" name="UploadedPicture" />
                <script type="text/javascript">
                    const file = document.querySelector('.picture-input');
                    file.addEventListener('change', (e) => {
                        document.querySelector('.picture').src = URL.createObjectURL(e.target.files[0]);
                    });
                </script>
            </div>

            <div class="form-group d-flex flex-column align-items-center justify-content-center">
                @Html.ValidationMessageFor(model => model.nazwa, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.nazwa, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tytuł" } })
            </div>

            <div class="form-group d-flex flex-column align-items-center justify-content-center">
                @Html.ValidationMessageFor(model => model.kategoria_id, "", new { @class = "text-danger" })
                <input class="form-control" type="text" list="category-list" name="category" placeholder="Kategoria" />
                <datalist id="category-list" placeholder="Wybierz kategorię...">
                    @foreach (Kategoria kat in ViewBag.kategorie as List<Kategoria>)
                    {
                        <option value="@kat.nazwa.Trim()"></option>
                    }
                </datalist>
            </div>

            <div class="form-group d-flex flex-column align-items-center justify-content-center">
                @Html.ValidationMessageFor(model => model.opis, "", new { @class = "text-danger" })
                @Html.TextAreaFor(model => model.opis, new { @class = "form-control", @placeholder = "Opis Ogłoszenia", @rows = "5", @cols = "50", @style = "resize:none;" })
            </div>

            <div class="form-group d-flex flex-column align-items-center justify-content-center flex-column align-items-center">
                @Html.ValidationMessageFor(model => model.typ, "", new { @class = "text-danger" })
                @Html.DropDownList("typ", new SelectList(ViewBag.typy), htmlAttributes: new { @class = "form-control", @placeholder = "Wybierz Typ", @style = "min-height:34px;" })
            </div>

            <div class="form-group d-flex flex-column align-items-center justify-content-center flex-column align-items-center">
                @Html.ValidationMessageFor(model => model.cena, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.cena, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            </div>
        </div>

        <div style="width:40%; min-width:280px;">
            <div class="form-group d-flex flex-column align-items-center justify-content-center">
                @Html.ValidationMessageFor(model => model.negocjacja, "", new { @class = "text-danger" })
                <div class="form-group d-flexjustify-content-center">
                    @Html.CheckBoxFor(model => model.negocjacja)
                    @Html.LabelFor(model => model.negocjacja, htmlAttributes: new { @class = "pl-3" })
                </div>
            </div>

            <div class="form-group d-flex flex-column align-items-center justify-content-center">
                @Html.ValidationMessageFor(model => model.pokaz_tel, "", new { @class = "text-danger" })
                <div class="form-group d-flexjustify-content-center">
                    @Html.CheckBoxFor(model => model.pokaz_tel)
                    @Html.LabelFor(model => model.pokaz_tel, htmlAttributes: new { @class = "pl-3" })
                </div>
            </div>

            <div class="form-group d-flex flex-column align-items-center justify-content-center">
                @Html.ValidationMessageFor(model => model.pokaz_email, "", new { @class = "text-danger" })
                <div class="form-group d-flexjustify-content-center">
                    @Html.CheckBoxFor(model => model.pokaz_email)
                    @Html.LabelFor(model => model.pokaz_email, htmlAttributes: new { @class = "pl-3" })
                </div>
            </div>

            <div class="form-group d-flex flex-column align-items-center flex-column align-items-center justify-content-center">
                @Html.ValidationMessageFor(model => model.lokalizacja, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.lokalizacja, new { htmlAttributes = new { @class = "form-control mb-3", @placeholder = "Lokalizacja", @id = "txt_location", @onfocusout = "updateLocation()" } })
                <iframe id="google-map"
                        loading="lazy"
                        allowfullscreen
                        referrerpolicy="no-referrer-when-downgrade"
                        src="https://www.google.com/maps/embed/v1/place?key=AIzaSyCCXqhU4mSHIUchFylDvyKMjB3mb9tPpf8&q=Poland">
                </iframe>
            </div>
        </div>

        
    </div>

    <div class="form-group d-flex justify-content-center">
        <input type="submit" value="Dodaj" class="btn btn-primary" />
    </div>
}

<div>
    @Html.ActionLink("Powrót", "Index", "Home")
</div>

<script type="text/javascript">
    function updateLocation() {
        let frame = document.getElementById("google-map")
        let textbox = document.getElementById("txt_location")
        var location = textbox.value;
        if (location == "") location = "Poland";
        frame.src = "https://www.google.com/maps/embed/v1/place?key=AIzaSyCCXqhU4mSHIUchFylDvyKMjB3mb9tPpf8&q=" + location;
    }
</script> 