@using PBX.Models

@model PBX.Models.Ogloszenie

@{
    ViewBag.Title = "Dodaj Ogłoszenie";
}
<h2>Dodaj Ogłoszenie</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group d-flex justify-content-center">
        @Html.EditorFor(model => model.nazwa, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tytuł" } })
        @Html.ValidationMessageFor(model => model.nazwa, "", new { @class = "text-danger" })
    </div>

        <div class="form-group d-flex justify-content-center">
                <input class = "form-control" type = "text" list = "category-list" name = "category" placeholder="Kategoria" />
                <datalist id="category-list" placeholder="Wybierz kategorię...">
                    @foreach (Kategoria kat in ViewBag.kategorie as List<Kategoria>)
                    {
                        <option value="@kat.nazwa.Trim()"></option>
                    }
                </datalist>
        </div>

        <div class="form-group d-flex justify-content-center">
                @Html.TextAreaFor(model => model.opis, new { @class = "form-control", @placeholder = "Opis Ogłoszenia", @rows = "5", @cols = "50", @style = "resize:none;" })
                @Html.ValidationMessageFor(model => model.opis, "", new { @class = "text-danger" })
        </div>

        <div class="form-group d-flex justify-content-center flex-column align-items-center">
            @Html.DropDownList("typ", new SelectList(ViewBag.typy), htmlAttributes: new { @class = "form-control", @placeholder = "Wybierz Typ", @style = "min-height:34px;" })
            @Html.ValidationMessageFor(model => model.typ, "", new { @class = "text-danger" })
        </div>

        <div class="form-group d-flex justify-content-center flex-column align-items-center">
            @Html.EditorFor(model => model.cena, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.cena, "", new { @class = "text-danger" })
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.CheckBoxFor(model => model.negocjacja)
            @Html.LabelFor(model => model.negocjacja, htmlAttributes: new { @class = "pl-3" })
            @Html.ValidationMessageFor(model => model.negocjacja, "", new { @class = "text-danger" })
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.CheckBoxFor(model => model.pokaz_tel)
            @Html.LabelFor(model => model.pokaz_tel, htmlAttributes: new { @class = "pl-3" })
            @Html.ValidationMessageFor(model => model.pokaz_tel, "", new { @class = "text-danger" })
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.CheckBoxFor(model => model.pokaz_email)
            @Html.LabelFor(model => model.pokaz_email, htmlAttributes: new { @class = "pl-3" })
            @Html.ValidationMessageFor(model => model.pokaz_email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
                <input type="submit" value="Dodaj" class="btn btn-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót", "Index", "Home")
</div>