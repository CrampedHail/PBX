@using PBX.Models
@model IEnumerable<PBX.Models.Chat>

@{
    ViewBag.Title = "Wiadomości";
}

<h2>Wiadomości</h2>
@{if (Model.Count() > 0)
    {
        <div class="messages d-flex flex-column align-items-start align-self-center mt-3" style="width:fit-content;">
            @foreach (var item in Model)
            {
                <div class="d-flex justify-content-start align-items-center w-100">
                    <a href="@Url.Action("Index", "Chat", new { id = item.id })" class="w-100 chatListItem
                   @if (!(ViewBag.chatIsRead as List<bool>).ElementAt((ViewBag.chatIds as List<int>).IndexOf(item.id))) { @: unread-chat
                   }
                   " style="font-size: 1.5rem;">
                        <div class="d-flex">
                            @{
                                string imgString = "data:image;base64," + Convert.ToBase64String(item.Ogloszenie.zdjecie);
                            }
                            <img class="picture-small" src="@imgString" />
                            <div class="d-flex flex-column ml-5">
                                <p class=" mb-1">
                                    @Html.DisplayFor(modelItem => item.Ogloszenie.nazwa) - @(item.Ogloszenie.cena)zł
                                </p>
                                @if ((ViewBag.user as Uzytkownik).id != item.Oglaszajacy.id)
                                {
                                    <p class=" mb-1">
                                        @{
                                            string personImgString = "data:image;base64," + Convert.ToBase64String(item.Oglaszajacy.zdjecie);
                                        }
                                        <img class="picture-tiny" src="@personImgString" />
                                        @Html.DisplayFor(modelItem => item.Oglaszajacy.imie)
                                    </p>
                                }
                                else
                                {
                                    <p class=" mb-1">
                                        @{
                                            string personImgString = "data:image;base64," + Convert.ToBase64String(item.Zainteresowany.zdjecie);
                                        }
                                        <img class="picture-tiny" src="@personImgString" />
                                        @Html.DisplayFor(modelItem => item.Zainteresowany.imie)
                                    </p>
                                }

                                <p class=" mb-1">
                                    @if (item.Wiadomosci.Last().nadawca_id == (ViewBag.user as Uzytkownik).id)
                                    {
                                        @: Ty:
                                    }
                                    @{
                                        int maxLength = 30;
                                        string wiadomosc = item.Wiadomosci.Last().wiadomosc.Trim();
                                        wiadomosc = wiadomosc.Length > maxLength ? wiadomosc.Substring(0, maxLength) + "..." : wiadomosc;
                                    }
                                    @wiadomosc
                                </p>
                            </div>
                        </div>
                    </a>
                    <a class="ml-5" href="@Url.Action("Delete", "Chat", new { id = item.id })">
                        <img class="fav-img" src="~/Images/delete.png" width="30" height="30" />
                    </a>
                </div>
            }
        </div>

    }
    else
    {
        <h4>Nie masz jeszcze żadnych rozpoczętych rozmów.</h4>
    }
}


