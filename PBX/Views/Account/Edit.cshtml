@model PBX.Models.Uzytkownik

@{
    ViewBag.Title = "Edycja konta";
}

<h2>Edycja konta</h2>

@using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    <h4 class="text-danger"> @ViewBag.NameError </h4>
    <h4 class="text-danger"> @ViewBag.PhoneError </h4>
    <h4 class="text-danger"> @ViewBag.EmailError </h4>
    <h4 class="text-danger"> @ViewBag.AvatarError </h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

<div class="form-group d-flex flex-column align-items-center justify-content-center" style="flex-direction:column;align-items:center">
    @{
        string imgString = "data:image;base64," + Convert.ToBase64String(Model.zdjecie);
    }
    <img class="avatar" src="@imgString" />
    @Html.ValidationMessageFor(model => model.zdjecie, "", new { @class = "text-danger" })
    <input class="avatar-input" type="file" accept=".jpg,.jpeg,.png" name="UploadedAvatar" />
    <script type="text/javascript">
        const file = document.querySelector('.avatar-input');
        file.addEventListener('change', (e) => {
            document.querySelector('.avatar').src = URL.createObjectURL(e.target.files[0]);
        });
    </script>
</div>

<div class="form-group d-flex flex-column align-items-center flex-column align-items-center justify-content-center">
    @Html.ValidationMessageFor(model => model.imie, "", new { @class = "text-danger", @placeholder = "Imię" })
    @Html.EditorFor(model => model.imie, new { htmlAttributes = new { @class = "form-control" } })
</div>

<div class="form-group d-flex flex-column align-items-center justify-content-center">
    @Html.ValidationMessageFor(model => model.nr_tel, "", new { @class = "text-danger", @placeholder = "Numer Telefonu" })
    @Html.EditorFor(model => model.nr_tel, new { htmlAttributes = new { @class = "form-control" } })
</div>

<div class="form-group d-flex flex-column align-items-center justify-content-center">
    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger", @placeholder = "Email" })
    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
</div>
    @Html.HiddenFor(model => model.haslo)
    @Html.HiddenFor(model => model.dolaczono)

    <div class="form-group d-flex flex-column align-items-center justify-content-center">
        <div class="">
            <input type="submit" value="Zapisz zmiany" class="btn btn-default" />
        </div>
    </div>
    @Html.ActionLink("Zmień hasło", "ChangePassword", "Account", "Account", new { @class = "" })
</div>
}

<div>
    @Html.ActionLink("Anuluj", "Index", "Home")
</div>
