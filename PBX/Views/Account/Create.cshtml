@model PBX.Models.Uzytkownik

@{
    ViewBag.Title = "Rejestracja";
}

<h2>Rejestracja</h2>

@using (Html.BeginForm("Create", "Account", new {u=Model}, FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Stwórz nowe konto</h4>
    <hr />
    <h4 class="text-danger"> @ViewBag.Error </h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group d-flex flex-column align-items-center justify-content-center" style="flex-direction:column;align-items:center">
        <img class="avatar" />
        @Html.ValidationMessageFor(model => model.zdjecie, "", new { @class = "text-danger" })
        <input class="avatar-input" type="file" accept=".jpg,.jpeg,.png" name="UploadedAvatar" />
        <script type="text/javascript">
            const file = document.querySelector('.avatar-input');
            file.addEventListener('change', (e) => {
                document.querySelector('.avatar').src = URL.createObjectURL(e.target.files[0]);
            });
        </script>
    </div>

    <div class="form-group d-flex flex-column align-items-center justify-content-center">
        @Html.ValidationMessageFor(model => model.imie, "", new { @class = "text-danger" })
        @Html.EditorFor(model => model.imie, new { htmlAttributes = new { @class = "form-control", @placeholder = "Imię" } })
    </div>

    <div class="form-group d-flex flex-column align-items-center justify-content-center">
        @Html.ValidationMessageFor(model => model.nr_tel, "", new { @class = "text-danger" })
        @Html.EditorFor(model => model.nr_tel, new { htmlAttributes = new { @class = "form-control", @placeholder = "Numer Telefonu" } })
    </div>

    <div class="form-group d-flex flex-column align-items-center justify-content-center">
        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
    </div>

    <div class="form-group d-flex flex-column align-items-center justify-content-center">
        @Html.ValidationMessageFor(model => model.haslo, "", new { @class = "text-danger" })
        @Html.EditorFor(model => model.haslo, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Hasło" } })
    </div>

    <div class="form-group d-flex flex-column align-items-center justify-content-center" hidden>
        @Html.HiddenFor(model => model.dolaczono, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group d-flex flex-column align-items-center justify-content-center">
        @Html.ValidationMessage("PrivacyError")
        <div class="form-group d-flex align-items-center justify-content-center">
            @Html.CheckBox("privacy-policy", false, new { @id = "privacy-policy" })
            <label class="ml-2 m b-0" for="privacy-policy">Akceptuję <a href="~/PrivacyPolicyPBX.pdf" target="_blank">politykę prywatności</a>.</label>
        </div>
    </div>

    <div class="form-group d-flex flex-column align-items-center justify-content-center">
        <input type="submit" value="Zarejestruj się" class="btn btn-default" />
    </div>
</div>
}

<div>
    @Html.ActionLink("Powrót", "Login")
</div>
